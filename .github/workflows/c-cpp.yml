name: C/C++ CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  SOLUTION_FILE_PATH: .

permissions:
  contents: write
  
jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    - name: Compile
      run: g++ main.cpp

    # - name: Display current directory
    #   run: dir

    - name: Run the program
      run: ./a.exe

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: TestBinary
        path: ./a.exe

    - name: Set env
      run: echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-7)" >> $GITHUB_ENV
      shell: bash
      
    # - name: Test
    #   run: echo $GITHUB_SHA_SHORT
    #   shell: bash

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.GITHUB_SHA_SHORT }}
        release_name: ${{ env.GITHUB_SHA_SHORT }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://github.blog/2020-08-03-github-actions-improvements-for-fork-and-pull-request-workflows/
        asset_path: ./a.exe
        asset_name: TestBinary.zip
        asset_content_type: application/zip
        
